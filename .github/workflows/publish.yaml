name: Publish to PyPI

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v4
      with:
        persist-credentials: false

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest

    - name: Install project dependencies
      run: poetry install

    - name: Determine version bump
      id: version-bump
      run: |
        poetry update --dry-run > update_report.txt
        cat update_report.txt
        if grep -q "major update" update_report.txt; then
          echo "::set-output name=bump_type::major"
        elif grep -q "minor update" update_report.txt; then
          echo "::set-output name=bump_type::minor"
        else
          echo "::set-output name=bump_type::patch"
        fi

    - name: Bump version
      uses: FragileTech/bump-version@main
      with:
        token: ${{ secrets.BOT_TOKEN }}
        files: "pyproject.toml"
        commit_name: "Aviad Rozenhek"
        commit_email: "aviadr1@gmail.com"
        login: "aviadr1"
        version_part: ${{ steps.version-bump.outputs.bump_type }}
        tag_name: "v{new_version}"
        commit_message: "Bump version to {new_version}"

    - name: Publish to PyPI
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
      run: poetry publish --build
